generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id Int @id @default(autoincrement())

  firstName   String
  lastName    String
  image       String?
  email       String    @unique
  password    String
  role        UserRole  @default(USER)
  gender      Gender?
  dateOfBirth DateTime?
  verified    DateTime?

  provider   String?
  providerId String?

  verificationCode VerificationCode?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  habits    Habit[]
}

model VerificationCode {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  code      String
  expiresAt DateTime

  createdAt DateTime @default(now())

  @@unique([userId, code])
}

enum UserRole {
  USER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model Habit {
  id        Int          @id @default(autoincrement())
  name      String
  priority  String       @default("Low")
  color     String       @default("bg-yellow-100")
  goal      Int          @default(0)
  achieved  Int          @default(0)
  entries   HabitEntry[]
  userId    Int
  user      User         @relation(fields: [userId], references: [id])
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  @@index([userId])
}

model HabitEntry {
  id        Int      @id @default(autoincrement())
  habitId   Int
  date      DateTime
  completed Boolean  @default(false)
  habit     Habit    @relation(fields: [habitId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([habitId])
  @@index([date])
}
